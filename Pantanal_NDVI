// ===============================================
// 0) Pantanal (MapBiomas Territories)
var biomas = ee.FeatureCollection(
  'projects/mapbiomas-territories/assets/TERRITORIES/LULC/BRAZIL/COLLECTION9/WORKSPACE/BIOMES'
);
var pantanal = biomas.filter(ee.Filter.eq('Bioma', 'Pantanal'));
var aoi = pantanal.geometry();

Map.addLayer(pantanal.style({color: 'red', width: 2, fillColor: '00000000'}), {}, 'Pantanal');
Map.centerObject(pantanal, 6);

// ===============================================
// 1) Funções Landsat C2 L2 (escala + máscara + harmonização)
function scaleSR(img) {
  var scaled = img.select('SR_B.*').multiply(0.0000275).add(-0.2);
  return img.addBands(scaled, null, true);
}
function maskLandsatC2L2(img) {
  var qa = img.select('QA_PIXEL');
  var cloud  = qa.bitwiseAnd(1 << 3).neq(0);
  var shadow = qa.bitwiseAnd(1 << 4).neq(0);
  var snow   = qa.bitwiseAnd(1 << 5).neq(0);
  var mask = cloud.or(shadow).or(snow).not();
  return img.updateMask(mask);
}
function toRedNir(sensor) {
  return function(img) {
    img = scaleSR(maskLandsatC2L2(img));
    return (sensor === 'L57')
      ? img.select(['SR_B3','SR_B4'], ['red','nir'])   // L5/L7
      : img.select(['SR_B4','SR_B5'], ['red','nir']);  // L8/L9
  };
}

// ===============================================
// 2) DEMO VISUAL (Landsat 8/9) — JUNHO/2024 (média do mês)
var L8 = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2').map(toRedNir('L89'));
var L9 = ee.ImageCollection('LANDSAT/LC09/C02/T1_L2').map(toRedNir('L89'));
var L89 = L8.merge(L9);

var demoStart = ee.Date('2024-06-01');
var demoEnd   = ee.Date('2024-07-01');

// região pequena para demo (50 km no centro do Pantanal). Troque por 'aoi' se quiser o bioma inteiro.
var demoRegion = aoi;

var l_demo = L89.filterBounds(aoi)
  .filterDate(demoStart, demoEnd)
  .mean()
  .clip(demoRegion);

var visRGB = {bands: ['red','red','red'], min: 0.02, max: 0.3}; // truque para ver algo caso a reflectância baixa; ajuste abaixo
// Melhor: usar as bandas originais de reflectância escaladas:
// Para RGB natural com L8/9 seria ['SR_B4','SR_B3','SR_B2'] após scaleSR, mas aqui já temos red/nir.
// Então só mostraremos NDVI para a demo:
var ndvi_demo = l_demo.normalizedDifference(['nir','red']).rename('NDVI');
Map.addLayer(ndvi_demo, {min: 0, max: 1, palette: ['brown','yellow','green']}, 'Landsat NDVI — Jun/2024 (demo)');

// ===============================================
// 3) Coleções Landsat completas (5/7/8/9) e série NDVI 1985–2024
var L5 = ee.ImageCollection('LANDSAT/LT05/C02/T1_L2').map(toRedNir('L57'));
var L7 = ee.ImageCollection('LANDSAT/LE07/C02/T1_L2').map(toRedNir('L57'));
var landsatAll = L5.merge(L7).merge(L8).merge(L9);

function annualNDVI(year) {
  year = ee.Number(year);
  var start = ee.Date.fromYMD(year, 1, 1);
  var end   = start.advance(1, 'year');
  var comp = landsatAll
    .filterBounds(aoi)
    .filterDate(start, end)
    .median();
  return comp.normalizedDifference(['nir','red'])
             .rename('NDVI')
             .set('year', year)
             .set('system:time_start', start.advance(6, 'month').millis());
}
var years = ee.List.sequence(1985, 2024);
var ndviAnnualIC = ee.ImageCollection(years.map(annualNDVI));

// ===============================================
// 4) 10 pontos aleatórios (P1..P100) no Pantanal
var pts = ee.FeatureCollection.randomPoints({
  region: aoi, points: 100, seed: 99, maxError: 1000
});
var ptsList = pts.toList(100);
var ptsLabeled = ee.FeatureCollection(ee.List.sequence(1,100).map(function(i){
  i = ee.Number(i);
  var f = ee.Feature(ptsList.get(i.subtract(1)));
  return f.set('pt', 'P' + i.format());
}));
Map.addLayer(ptsLabeled, {color: 'black'}, 'Pontos (P1..P100)');

// ===============================================
/// ===============================================
// 5) ui.Chart: Série NDVI (1985–2024) — uma linha por ponto (P1..P10)
// ===============================================
// === (re)gera labels P1..P10 garantidos ===
var ptsList = pts.toList(pts.size());
var ptsLabeled = ee.FeatureCollection(
  ee.List.sequence(1, pts.size()).map(function(i){
    i = ee.Number(i);
    var f = ee.Feature(ptsList.get(i.subtract(1)));
    return f.set('pt', ee.String('P').cat(i.format()));
  })
);

// opcional: inspecione para confirmar que 'pt' existe
// print('Exemplo de ponto com label:', ptsLabeled.first());

// === gráfico: uma linha por ponto (seriesProperty = 'pt') ===
var chart = ui.Chart.image.seriesByRegion({
  imageCollection: ndviAnnualIC,
  regions: ptsLabeled,
  reducer: ee.Reducer.first(),      // ou ee.Reducer.mean() com buffer, se quiser suavizar
  band: 'NDVI',
  scale: 30,
  seriesProperty: 'pt',             // <— cada ponto será uma série (P1..P10)
  xProperty: 'system:time_start'
})
.setChartType('LineChart')
.setOptions({
  title: 'NDVI anual (1985–2024) — 10 pontos no Pantanal',
  hAxis: { title: 'Ano' },
  vAxis: { title: 'NDVI', viewWindow: {min: -1, max: 1} },
  lineWidth: 2,
  pointSize: 3,
  legend: { position: 'right' }
});

print(chart);

//Adiciona script NDVI anual por pontos no Pantanal).
